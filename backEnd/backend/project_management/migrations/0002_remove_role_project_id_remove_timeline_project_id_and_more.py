# Generated by Django 5.2.4 on 2025-09-06 01:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('project_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='role',
            name='project_id',
        ),
        migrations.RemoveField(
            model_name='timeline',
            name='project_id',
        ),
        migrations.RemoveField(
            model_name='project',
            name='due_date',
        ),
        migrations.RemoveField(
            model_name='project',
            name='owner',
        ),
        migrations.RemoveField(
            model_name='project',
            name='source_pdf',
        ),
        migrations.RemoveField(
            model_name='project',
            name='status',
        ),
        migrations.RemoveField(
            model_name='task',
            name='created_by_llm',
        ),
        migrations.AddField(
            model_name='project',
            name='risks',
            field=models.TextField(blank=True, help_text='Project risks', null=True),
        ),
        migrations.AddField(
            model_name='task',
            name='description',
            field=models.TextField(blank=True, help_text='Task description', null=True),
        ),
        migrations.AlterField(
            model_name='project',
            name='summary',
            field=models.TextField(help_text='Project summary'),
        ),
        migrations.AlterField(
            model_name='task',
            name='role',
            field=models.CharField(blank=True, help_text='Required role for the task', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='task',
            name='title',
            field=models.CharField(help_text='Task title', max_length=255),
        ),
        migrations.CreateModel(
            name='Backlog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('epic', 'Epic'), ('sub_epic', 'Sub-Epic'), ('user_story', 'User Story')], help_text='Type of backlog item', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backlogs', to='project_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='Epic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Epic title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Epic description', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('backlog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='epics', to='project_management.backlog')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(help_text='Member role in the project', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='project_management.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_memberships', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Proposal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(help_text='PDF file of the proposal', upload_to='proposals/')),
                ('parsedText', models.TextField(blank=True, help_text='Extracted content from PDF', null=True)),
                ('methodology', models.TextField(blank=True, help_text='Project methodology', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='project_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='Sprint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Sprint duration in days', null=True)),
                ('start_date', models.DateField(blank=True, help_text='Sprint start date', null=True)),
                ('end_date', models.DateField(blank=True, help_text='Sprint end date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sprints', to='project_management.project')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='sprint',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='project_management.sprint'),
        ),
        migrations.CreateModel(
            name='SubEpic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Sub-Epic title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Sub-Epic description', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('epic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_epics', to='project_management.epic')),
            ],
        ),
        migrations.CreateModel(
            name='UserStory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='User story title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='User story description', null=True)),
                ('acceptance_criteria', models.TextField(blank=True, help_text='Acceptance criteria for the user story', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sub_epic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stories', to='project_management.subepic')),
            ],
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='project_management.task')),
                ('user_story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tasks', to='project_management.userstory')),
            ],
        ),
        migrations.DeleteModel(
            name='Risk',
        ),
        migrations.DeleteModel(
            name='Role',
        ),
        migrations.DeleteModel(
            name='Timeline',
        ),
    ]
