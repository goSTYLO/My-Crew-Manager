# Generated by Django 5.2.4 on 2025-09-02 02:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Project name', max_length=255)),
                ('summary', models.TextField(help_text='LLM-generated overview')),
                ('status', models.DecimalField(decimal_places=2, default=0, help_text='Completion percentage (0â€“100)', max_digits=5)),
                ('due_date', models.DateField(blank=True, help_text='Target completion date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_pdf', models.FileField(blank=True, help_text='Optional link to uploaded proposal', null=True, upload_to='project_pdfs/')),
                ('owner', models.ForeignKey(blank=True, help_text='Optional owner for multi-user support', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(help_text='Risk category (e.g., Technical Limitations, Timeline Slips)', max_length=150)),
                ('mitigation', models.TextField(help_text='Strategy to reduce or manage risk')),
                ('contingency', models.TextField(help_text='Backup plan if mitigation fails')),
                ('created_by_llm', models.BooleanField(default=False, help_text='True if generated by assistant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='project_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Role name', max_length=100)),
                ('description', models.TextField(help_text='Responsibilities of this role')),
                ('created_by_llm', models.BooleanField(default=False, help_text='True if generated by assistant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='project_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Task description', max_length=255)),
                ('role', models.CharField(help_text='Responsible role (e.g., Backend, AI Engineer)', max_length=100)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('done', 'Done')], default='todo', help_text='Task status', max_length=20)),
                ('created_by_llm', models.BooleanField(default=False, help_text='True if generated by assistant')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='project_management.project')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('week_number', models.PositiveIntegerField(help_text='Week number of the project timeline')),
                ('tasks', models.JSONField(default=list, help_text='List of tasks for that week (array of strings or JSON)')),
                ('notes', models.TextField(blank=True, help_text='Optional notes for this week', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timelines', to='project_management.project')),
            ],
        ),
    ]
